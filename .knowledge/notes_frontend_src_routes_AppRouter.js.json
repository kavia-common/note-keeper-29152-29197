{"is_source_file": true, "format": "JavaScript", "description": "This file implements a minimal hash-based router for the Notes application, managing route parsing, URL hash synchronization, and context provisioning for route access within React components.", "external_files": ["../context/NotesContext"], "external_methods": ["useNotesContext"], "published": ["useHashRouter", "RouterProvider", "useAppRouter"], "classes": [], "methods": [{"name": "parseHash(hashString)", "description": "Parses the URL hash string and returns the route and parameters, specifically handling '/' and '/note/:id' paths.", "scope": "", "scopeKind": ""}, {"name": "buildHashForNote(id)", "description": "Constructs a URL hash string for a given note ID, defaulting to home ('#/') if the ID is falsy.", "scope": "", "scopeKind": ""}, {"name": "useHashRouter()", "description": "Custom hook that manages hash-based routing state, provides route params, and navigation function.", "scope": "", "scopeKind": ""}, {"name": "RouterProvider({ children })", "description": "React component that synchronizes route state with the NotesContext's selected note ID, and provides routing info via context.", "scope": "", "scopeKind": ""}, {"name": "useAppRouter()", "description": "Hook to access routing information and navigate functions within components, enforcing usage within RouterProvider.", "scope": "", "scopeKind": ""}], "calls": ["useNotesContext", "parseHash", "buildHashForNote", "useHashRouter", "useEffect", "useState", "useCallback", "useMemo", "useContext", "window.addEventListener", "window.removeEventListener", "window.location.hash", "actions.selectNote", "setState"], "search-terms": ["hash-based routing", "NotesContext synchronization", "React context routing", "URL hash parser", "Custom hook routing", "note ID route"], "state": 2, "file_id": 30, "knowledge_revision": 92, "git_revision": "", "revision_history": [{"91": ""}, {"92": ""}], "ctags": [{"_type": "tag", "name": "RouterContext", "path": "/home/kavia/workspace/code-generation/note-keeper-29152-29197/notes_frontend/src/routes/AppRouter.js", "pattern": "/^const RouterContext = createContext(undefined);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "RouterProvider", "path": "/home/kavia/workspace/code-generation/note-keeper-29152-29197/notes_frontend/src/routes/AppRouter.js", "pattern": "/^export function RouterProvider({ children }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ children })"}, {"_type": "tag", "name": "buildHashForNote", "path": "/home/kavia/workspace/code-generation/note-keeper-29152-29197/notes_frontend/src/routes/AppRouter.js", "pattern": "/^function buildHashForNote(id) {$/", "language": "JavaScript", "kind": "function", "signature": "(id)"}, {"_type": "tag", "name": "parseHash", "path": "/home/kavia/workspace/code-generation/note-keeper-29152-29197/notes_frontend/src/routes/AppRouter.js", "pattern": "/^function parseHash(hashString) {$/", "language": "JavaScript", "kind": "function", "signature": "(hashString)"}, {"_type": "tag", "name": "useAppRouter", "path": "/home/kavia/workspace/code-generation/note-keeper-29152-29197/notes_frontend/src/routes/AppRouter.js", "pattern": "/^export function useAppRouter() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "useHashRouter", "path": "/home/kavia/workspace/code-generation/note-keeper-29152-29197/notes_frontend/src/routes/AppRouter.js", "pattern": "/^export function useHashRouter() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/note-keeper-29152-29197/notes_frontend/src/routes/AppRouter.js", "pattern": "/^  return <RouterContext.Provider value={value}>{children}<\\/RouterContext.Provider>;$/", "language": "JavaScript", "kind": "field", "scope": "Provider", "scopeKind": "class"}], "hash": "ec4d4b3dccfd2afebb1b90cddb04ec04", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/routes/AppRouter.js", "fields": [{"name": "return <RouterContext.Provider value={value}>{children}<\\/RouterContext.Provider>;", "scope": "Provider", "scopeKind": "class", "description": "unavailable"}]}